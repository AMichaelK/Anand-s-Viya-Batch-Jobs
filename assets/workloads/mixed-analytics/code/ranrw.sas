/******************************************************************************
 * Copyright (c) 2013 by SAS Institute Inc, Cary NC 27511  USA
 *
 * This program is part of the Mixed Analytic Workload repository of
 *   test programs used to evaluate SAS concurrent workload.   
 * NAME:  RANRWA.sas
 * DESCRIPTION: former name - gn405pfc.  Data set performance test: random read (skinny,
 *                            medium, wide) on Data. # random reads=10% obs. No compression,
 *                            no encryption.
 *
 * SETUP INSTRUCTIONS:
 *   Data for this test is generated by the test.  Obs can be set to dictate run-time/scale.
 *
 *   OUTPUT:  none
 *
 * SYSTEM REQUIREMENTS:  NA
 *
 * ANTICIPATED RUNTIME:  TBD
 * TEST CHARACTERIZATION:  I/O Intensive
 *
 * SAS PRODUCTS INVOLVED:  Base SAS
 * SAS PROCEDURES INVOLVED: Data Step
 *
 * DATA SOURCE:  self-generated
 * DATA CHARACTERIZATION:  n/a
 *
 * COMMENTS:
 * DISTRIBUTION STATUS:  Internal
 * CONTRIBUTED BY:  Anne Albright
 *
 * HISTORY:
 *   Date       Description                       Who
 *  19JUL13     Added to Mixed Analytic Workload  Tony Brown
 *******************************************************************************/

/*******************************************************************************
 *                        PROGRAM SETUP
 * Use this section to alter macro variables, options, or other aspects of the
 * test.  No Edits to this Program are allowed past the Program Setup section!!
 *******************************************************************************/


 /**********************************************************************
 *Starting code for log review information                             
 **********************************************************************/

%macro stdout (command, debug=no);

  %local fileref fid rc;

  %let rc = %sysfunc (filename (fileref, &command, PIPE));

%if &debug=yes %then %put fileref=&fileref;

  %if &rc = 0 %then %do;

    %let fid = %sysfunc (fopen (&fileref, S));
    %if &fid ne 0 %then %do;

      %do %while(%sysfunc(fread(&fid)) = 0);

        %local line;
        %let rc = %qsysfunc(fget(&fid,line,200));

%if &debug=yes %then %put line=&line;

        &line

      %end;

      %let fid = %sysfunc (fclose (&fid));
    %end;
    %else %do;

      %put ERRROR: PIPE OPEN FAILED, %sysfunc(sysmsg());
      PIPE OPEN FAILED

    %end;

    %let rc = %sysfunc (filename (fileref));
  %end;
  %else %do;
    %put ERRROR: COMMAND PIPE SETUP FAILED, rc=&rc..;
    COMMAND PIPE SETUP FAILED
  %end;

%mend;

/**********************************************************************
 *Ending - code for log review information                            
 **********************************************************************/



/*******************************************************************************
 *                        PROGRAM SETUP
 * Use this section to alter macro variables, options, or other aspects of the
 * test.  No Edits to this Program are allowed past the Program Setup section!!
 *******************************************************************************/
%let mysysparm=%sysfunc(getoption(SYSPARM));
*%let suiteloc=%sysget(ASUITE);
%put &suiteloc;

%let data= &suiteloc/input;   /*  location of source data  */

/*
    May 9, 2023 - MEIngraham
    Pass number of observations as a command line parameter.
      sas -set nobs nnnnn
    If the parameter is not passed, set to original default value.
*/
%let nobs = %sysget(nobs);
%if %length(&nobs) eq 0 %then %do;
%let nobs=0;
%end;
%put &=nobs;
%if &nobs eq 0 %then %do;
%let nobs = 15000000;
%end;
%put &=nobs;

/* End of Data Setup Section */

/* Do NOT edit below this line! */


 /*** Set the number of random reads to X% of obs ***/
%macro setran;
   %global ranreads;
   %let ranreads=%eval(&nobs/5);
%mend;

%setran

/*******************************************************************************
 *                       END OF PROGRAM SETUP
 *******************************************************************************/

/* Do NOT edit below this line! */
options fmterr fullstimer source source2 mprint notes;

/*******************************************************************************
 *                        PASS MACRO CODE - DO NOT EDIT
 *  This section controls information printed to the log for performance analysis
 ********************************************************************************/
/* PASS: Print information to the log for performance analysis. */ 
%macro passinfo;
  data _null_;
   temp=datetime();
   temp2=lowcase(trim(left(put(temp,datetime16.))));
   call symput('datetime', trim(temp2));
 
   %if ( &SYSSCP = WIN )
   %then call symput('host', "%sysget(computername)");
   %else call symput('host', "%sysget(HOST)");
   ;
  run;

  %put PASS HEADER BEGIN;
  %put PASS HEADER os=&sysscp;
  %put PASS HEADER os2=&sysscpl;
  %put PASS HEADER host=&host;
  %put PASS HEADER ver=&sysvlong;
  %put PASS HEADER date=&datetime;
  %put PASS HEADER parm=&sysparm;

  proc options group=memory; run;
  proc options group=performance; run;
  options SASTRACE=',,,d' SASTRACELOC=saslog NOSTSUFFIX;

  libname _all_ list; run; 

  %put PASS HEADER END;
%mend passinfo;
%passinfo;
run;
 
DATA _NULL_; 
 %PUT This job started on &sysdate at &systime; 
RUN;
 
/***************************************************************************
 *                        END OF PASS MACRO CODE
 ***************************************************************************/ 


/***************************************************************************
 *                         PROGRAM CODE SECTION
 ***************************************************************************/


/*** Load the data step code into memory ***/
data a;
     x=1;
run;

/*** skinny write -- 128-byte obs ***/
data skinny;
     length char $ 120;
     do i=1 to &nobs;
        output;
     end;
run;

/*** medium write -- 1024-byte obs ***/
data medium;
     length char1-char5 $ 200;
     length char6       $ 16;
     do i=1 to &nobs;
        output;
     end;
run;

/*** wide write -- 10240-byte obs ***/
data wide;
     length char1-char20 $ 200;
     length char21       $ 32;
     do i=1 to &nobs;
        output;
     end;
run;

/*** read skinny data set        ***/
data _null_;
     do j=1 to &ranreads;
        z=ceil(ranuni(1)*total);
        set skinny point=z nobs=total;
        if _error_ then put "error " _all_;
        output;
     end;
     stop;
run;

/*** read medium data set        ***/
data _null_;
     do j=1 to &ranreads;
        z=ceil(ranuni(1)*total);
        set medium point=z nobs=total;
        if _error_ then put "error " _all_;
        output;
     end;
     stop;
run;

/*** read wide data set          ***/
data _null_;
     do j=1 to &ranreads;
        z=ceil(ranuni(1)*total);
        set wide   point=z nobs=total;
        if _error_ then put "error " _all_;
        output;
     end;
     stop;
run;

/***************************************************************************
 *                      END OF PROGRAM CODE SECTION
 ***************************************************************************/

/***************************************************************************
 *                       END OF TEST
 ****************************************************************************/
